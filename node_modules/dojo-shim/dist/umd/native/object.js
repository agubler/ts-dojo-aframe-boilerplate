(function (factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    /**
     * Determines whether two values are the same value.
     *
     * @param value1 The first value to compare
     * @param value2 The second value to compare
     * @return true if the values are the same; false otherwise
     */
    exports.is = Object.is;
    /**
     * Returns an array of own properties who key is a symbol
     *
     * @param o The object to return the properties for
     */
    exports.getOwnPropertySymbols = Object.getOwnPropertySymbols;
    /**
     * Returns an array of own properties who key is a string
     *
     * @param o The object to return the properties for
     */
    /* intentionally detecting `getOwnPropertySymbols` because we should should provide the shim
     * when there is no support for symbols */
    exports.getOwnPropertyNames = Object.getOwnPropertyNames;
});
//# sourceMappingURL=object.js.map