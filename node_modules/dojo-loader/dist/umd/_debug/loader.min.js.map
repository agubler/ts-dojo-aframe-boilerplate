{"version":3,"sources":["loader.ts"],"names":["args","forEach","array","callback","mix","target","source","deep","key","sourceValue","Array","isArray","RegExp","consumePendingCacheInsert","referenceModule","item","pendingCacheInsert","cache","toUrl","getModuleInformation","mid","noop","contextRequire","dependencies","module","getModule","executed","EXECUTING","has","plugin","result","loadNodeModule","Error","initializeModule","cjs","setExports","injected","injectModule","uidGenerator","deps","resolveDependencies","def","gc","guardCheckComplete","bind","executionQueue","push","checkComplete","createRequire","requireModule","require","name","toAbsMid","runMapProgram","targetModuleId","map","i","j","length","test","compactPath","path","segment","lastSegment","pathSegments","replace","split","absolutePathSegments","shift","pop","join","updateModuleIdFromMap","moduleId","moduleMap","mapPrograms","star","mapItem","slice","getPluginInformation","match","pluginResourceId","isPluginLoaded","load","resolvePluginResourceId","req","prid","fix","moduleIdInPackage","packageId","pack","config","pkgs","main","modules","pathMapPrograms","url","location","pid","baseUrl","normalize","pluginRegEx","passedModuleMatch","pluginId","mappedModuleMatch","moduleInfo","makeCommonJs","executeModule","indexOf","commonJsExportsModule","console","warn","circularTrace","concat","ABORT_EXECUTION","result_1","executedDependencies","dependency","commonJsRequireModule","exports","commonJsModuleModule","factory","apply","undefined","executedSomething","loadQ","pseudoPluginResource","pluginResource","injectPlugin","waitingCount","checkCompleteGuard","module_1","splice","onLoad","unshift","parent","cached","onLoadCallback","node","moduleDefinitionArguments","defArgs","defineModule","error","injectUrl","m","id","uri","globalObject","Function","packages","paths","setGlobals","hasCache","Object","create","global","document","element","createElement","add","now","force","listenerQueues","reportModuleLoadError","parentMid","message","src","info","emit","type","queue","hasListeners","_i","_a","listener","on","remove","process","versions","Packages","navigator","userAgent","configuration","computeMapProgram","value","isValueAMapReplacement","0","1","2","3","sort","left","right","mergeProps","bundles","packageDescriptor","prototype","thisArg","call","arguments","globalObjectGlobals","define","_findPath","_nodeModulePaths","localModulePath","nodeRequire","vm_1","fs_1","readFile","data","loadCallback","oldModule","runInThisContext","handler","event","head","removeChild","addEventListener","crossOrigin","charset","appendChild","inspect","eval","undef","defineProperty","get","enumerable","comments","requireCall","originalFactory","module_2","originalModuleId","newModule","value_1","scripts","script","readyState","amd","vendor"],"mappings":"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","file":"loader.min.js","sourcesContent":["'use strict';\n(function (args?: string[]): void {\n\tconst globalObject: any = Function('return this')();\n\tconst EXECUTING = 'executing';\n\tconst ABORT_EXECUTION: Object = {};\n\t//\n\t// loader state data\n\t//\n\n\t// hash: (mid | url)-->(function | string)\n\t//\n\t// A cache of resources. The resources arrive via a require.cache application, which takes a hash from either\n\t// mid --> function or url --> string. The function associated with mid keys causes the same code to execute as if\n\t// the module was script injected.\n\t//\n\t// Both kinds of key-value pairs are entered into cache via the function consumePendingCache, which may relocate\n\t// keys as given by any mappings *iff* the cache was received as part of a module resource request.\n\tlet cache: DojoLoader.ObjectMap = {};\n\n\tlet checkCompleteGuard = 0;\n\n\t// The configuration passed to the loader\n\tlet config: DojoLoader.Config = {\n\t\tbaseUrl: './',\n\t\tpackages: [],\n\t\tpaths: {},\n\t\tpkgs: {}\n\t};\n\n\t// The arguments sent to loader via AMD define().\n\tlet moduleDefinitionArguments: DojoLoader.ModuleDefinitionArguments = null;\n\n\t// The list of modules that need to be evaluated.\n\tlet executionQueue: DojoLoader.Module[] = [];\n\n\tlet executedSomething = false;\n\n\tlet injectUrl: (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module, parent?: DojoLoader.Module) => void;\n\n\t// array of quads as described by computeMapProg; map-key is AMD map key, map-value is AMD map value\n\tlet mapPrograms: DojoLoader.MapRoot = [];\n\n\t// A hash: (mid) --> (module-object) the module namespace\n\t//\n\t// pid: the package identifier to which the module belongs (e.g., \"dojo\"); \"\" indicates the system or default\n\t// \tpackage\n\t// mid: the fully-resolved (i.e., mappings have been applied) module identifier without the package identifier\n\t// \t(e.g., \"dojo/io/script\")\n\t// url: the URL from which the module was retrieved\n\t// pack: the package object of the package to which the module belongs\n\t// executed: false => not executed; EXECUTING => in the process of tranversing deps and running factory;\n\t// \ttrue => factory has been executed\n\t// deps: the dependency array for this module (array of modules objects)\n\t// def: the factory for this module\n\t// result: the result of the running the factory for this module\n\t// injected: true => module has been injected\n\t// load, normalize: plugin functions applicable only for plugins\n\t//\n\t// Modules go through several phases in creation:\n\t//\n\t// 1. Requested: some other module's definition or a require application contained the requested module in\n\t//    its dependency array\n\t//\n\t// 2. Injected: a script element has been appended to the insert-point element demanding the resource implied by\n\t//    the URL\n\t//\n\t// 3. Loaded: the resource injected in [2] has been evaluated.\n\t//\n\t// 4. Defined: the resource contained a define statement that advised the loader about the module.\n\t//\n\t// 5. Evaluated: the module was defined via define and the loader has evaluated the factory and computed a result.\n\tlet modules: { [ moduleId: string ]: DojoLoader.Module; } = {};\n\n\t// list of (from-path, to-path, regex, length) derived from paths;\n\t// a \"program\" to apply paths; see computeMapProg\n\tlet pathMapPrograms: DojoLoader.PathMap[] = [];\n\n\t// hash: (mid | url)-->(function | string)\n\t//\n\t// Gives a set of cache modules pending entry into cache. When cached modules are published to the loader, they are\n\t// entered into pendingCacheInsert; modules are then pressed into cache upon (1) AMD define or (2) upon receiving\n\t// another independent set of cached modules. (1) is the usual case, and this case allows normalizing mids given\n\t// in the pending cache for the local configuration, possibly relocating modules.\n\tlet pendingCacheInsert: { [moduleId: string]: any; } = {};\n\n\tlet setGlobals: (require: DojoLoader.RootRequire, define: DojoLoader.Define) => void;\n\n\tlet uidGenerator = 0;\n\n\t// the number of modules the loader has injected but has not seen defined\n\tlet waitingCount = 0;\n\n\tconst has: DojoLoader.Has = (function (): DojoLoader.Has {\n\t\tconst hasCache: { [ name: string ]: any; } = Object.create(null);\n\t\tconst global: Window = globalObject;\n\t\tconst document: HTMLDocument = global.document;\n\t\tconst element: HTMLDivElement = document && document.createElement('div');\n\n\t\tconst has: DojoLoader.Has = <DojoLoader.Has> function(name: string): any {\n\t\t\treturn typeof hasCache[name] === 'function' ?\n\t\t\t\t(hasCache[name] = hasCache[name](global, document, element)) : hasCache[name];\n\t\t};\n\n\t\thas.add = function (name: string, test: any, now: boolean, force: boolean): void {\n\t\t\t(!(name in hasCache) || force) && (hasCache[name] = test);\n\t\t\tnow && has(name);\n\t\t};\n\n\t\treturn has;\n\t})();\n\n\tconst requireModule: DojoLoader.RootRequire =\n\t\t<DojoLoader.RootRequire> function (dependencies: any, callback?: DojoLoader.RequireCallback): DojoLoader.Module {\n\t\t\treturn contextRequire(dependencies, callback);\n\t\t};\n\n\tconst listenerQueues: { [queue: string]: ((...args: any[]) => void)[] } = {};\n\n\tconst reportModuleLoadError = function (parent: DojoLoader.Module, module: DojoLoader.Module, url: string): void {\n\t\tconst parentMid = (parent ? ` (parent: ${parent.mid})` : '');\n\t\tconst message = `Failed to load module ${module.mid} from ${url}${parentMid}`;\n\t\tconst error = mix<DojoLoader.LoaderError>(new Error(message), {\n\t\t\tsrc: 'dojo/loader',\n\t\t\tinfo: {\n\t\t\t\tmodule,\n\t\t\t\turl,\n\t\t\t\tparentMid\n\t\t\t}\n\t\t});\n\n\t\tif (!emit('error', error)) { throw error; };\n\t};\n\n\tconst emit = function(type: DojoLoader.SignalType, args: {}): number | boolean {\n\t\tlet queue = listenerQueues[type];\n\t\tlet hasListeners = queue && queue.length;\n\n\t\tif (hasListeners) {\n\t\t\tfor (let listener of queue.slice(0)) {\n\t\t\t\tlistener.apply(null, Array.isArray(args) ? args : [args]);\n\t\t\t}\n\t\t}\n\n\t\treturn hasListeners;\n\t};\n\n\tconst on = function(type: string, listener: (error: DojoLoader.LoaderError) => void): { remove: () => void } {\n\t\tlet queue = listenerQueues[type] || (listenerQueues[type] = []);\n\n\t\tqueue.push(listener);\n\n\t\treturn {\n\t\t\tremove(): void {\n\t\t\t\tqueue.splice(queue.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t};\n\n\trequireModule.has = has;\n\trequireModule.on = on;\n\n\thas.add('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n\thas.add('host-node', typeof process === 'object' && process.versions && process.versions.node);\n\thas.add('host-nashorn', typeof load === 'function' && typeof Packages !== 'undefined');\n\thas.add('debug', true);\n\n\t// IE9 will process multiple scripts at once before firing their respective onload events, so some extra work\n\t// needs to be done to associate the content of the define call with the correct node. This is known to be fixed\n\t// in IE10 and the bad behaviour cannot be inferred through feature detection, so simply target this one user-agent\n\thas.add('loader-ie9-compat', has('host-browser') && navigator.userAgent.indexOf('MSIE 9.0') > -1);\n\n\thas.add('loader-configurable', true);\n\tif (has('loader-configurable')) {\n\t\t/**\n\t\t * Configures the loader.\n\t\t *\n\t\t * @param {{ ?baseUrl: string, ?map: Object, ?packages: Array.<({ name, ?location, ?main }|string)> }} config\n\t\t * The configuration data.\n\t\t */\n\t\trequireModule.config = function (configuration: DojoLoader.Config): void {\n\t\t\t// Make sure baseUrl ends in a slash\n\t\t\tif (configuration.baseUrl) {\n\t\t\t\tconfiguration.baseUrl = configuration.baseUrl.replace(/\\/*$/, '/');\n\t\t\t}\n\n\t\t\tconst mergeProps: DojoLoader.ObjectMap = {\n\t\t\t\tpaths: true,\n\t\t\t\tbundles: true,\n\t\t\t\tconfig: true,\n\t\t\t\tmap: true\n\t\t\t};\n\n\t\t\t// Copy configuration over to config object\n\t\t\tfor (let key in configuration) {\n\t\t\t\tconst value = (<DojoLoader.ObjectMap> configuration)[key];\n\t\t\t\tif (mergeProps[key]) {\n\t\t\t\t\tif (!(<DojoLoader.ObjectMap> config)[key]) {\n\t\t\t\t\t\t(<DojoLoader.ObjectMap> config)[key] = {};\n\t\t\t\t\t}\n\t\t\t\t\tmix((<DojoLoader.ObjectMap> config)[key], value, true);\n\t\t\t\t} else {\n\t\t\t\t\t(<DojoLoader.ObjectMap> config)[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO: Expose all properties on req as getter/setters? Plugin modules like dojo/node being able to\n\t\t\t// retrieve baseUrl is important. baseUrl is defined as a getter currently.\n\n\t\t\tforEach(configuration.packages, function (packageDescriptor: DojoLoader.Package): void {\n\t\t\t\t// Allow shorthand package definition, where name and location are the same\n\t\t\t\tif (typeof packageDescriptor === 'string') {\n\t\t\t\t\tpackageDescriptor = { name: <string> packageDescriptor, location: <string> packageDescriptor };\n\t\t\t\t}\n\n\t\t\t\tif (packageDescriptor.location != null) {\n\t\t\t\t\tpackageDescriptor.location = packageDescriptor.location.replace(/\\/*$/, '/');\n\t\t\t\t}\n\n\t\t\t\tconfig.pkgs[packageDescriptor.name] = packageDescriptor;\n\t\t\t});\n\n\t\t\tfunction computeMapProgram(map: DojoLoader.ModuleMapItem): DojoLoader.MapItem[] {\n\t\t\t\t// This method takes a map as represented by a JavaScript object and initializes an array of\n\t\t\t\t// arrays of (map-key, map-value, regex-for-map-key, length-of-map-key), sorted decreasing by length-\n\t\t\t\t// of-map-key. The regex looks for the map-key followed by either \"/\" or end-of-string at the beginning\n\t\t\t\t// of a the search source.\n\t\t\t\t//\n\t\t\t\t// Maps look like this:\n\t\t\t\t//\n\t\t\t\t// map: { C: { D: E } }\n\t\t\t\t//    A\tB\n\t\t\t\t//\n\t\t\t\t// The computed mapping is a 4-array deep tree, where the outermost array corresponds to the source\n\t\t\t\t// mapping object A, the 2nd level arrays each correspond to one of the source mappings C -> B, the 3rd\n\t\t\t\t// level arrays correspond to each destination mapping object B, and the innermost arrays each\n\t\t\t\t// correspond to one of the destination mappings D -> E.\n\t\t\t\t//\n\t\t\t\t// So, the overall structure looks like this:\n\t\t\t\t//\n\t\t\t\t// mapPrograms = [ source mapping array, source mapping array, ... ]\n\t\t\t\t// source mapping array = [\n\t\t\t\t//     source module id,\n\t\t\t\t//     [ destination mapping array, destination mapping array, ... ],\n\t\t\t\t//     RegExp that matches on source module id,\n\t\t\t\t//     source module id length\n\t\t\t\t// ]\n\t\t\t\t// destination mapping array = [\n\t\t\t\t//     original module id,\n\t\t\t\t//     destination module id,\n\t\t\t\t//     RegExp that matches on original module id,\n\t\t\t\t//     original module id length\n\t\t\t\t// ]\n\n\t\t\t\tconst result: DojoLoader.MapItem[] = [];\n\n\t\t\t\tfor (let moduleId in map) {\n\t\t\t\t\tconst value: any = (<any> map)[moduleId];\n\t\t\t\t\tconst isValueAMapReplacement: boolean = typeof value === 'object';\n\n\t\t\t\t\tconst item = <DojoLoader.MapItem> {\n\t\t\t\t\t\t0: moduleId,\n\t\t\t\t\t\t1: isValueAMapReplacement ? computeMapProgram(value) : value,\n\t\t\t\t\t\t2: new RegExp('^' + moduleId.replace(/[-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&') + '(?:\\/|$)'),\n\t\t\t\t\t\t3: moduleId.length\n\t\t\t\t\t};\n\t\t\t\t\tresult.push(item);\n\n\t\t\t\t\tif (isValueAMapReplacement && moduleId === '*') {\n\t\t\t\t\t\t(<DojoLoader.MapRoot> result).star = item[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.sort(function (left: DojoLoader.MapItem, right: DojoLoader.MapItem): number {\n\t\t\t\t\treturn right[3] - left[3];\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t// FIXME this is a down-cast.\n\t\t\t// computeMapProgram => MapItem[] => mapPrograms: MapSource[]\n\t\t\t// MapSource[1] => MapReplacement[] is more specific than MapItems[1] => any\n\t\t\tmapPrograms = computeMapProgram(config.map);\n\n\t\t\t// Note that old paths will get destroyed if reconfigured\n\t\t\tconfiguration.paths && (pathMapPrograms = computeMapProgram(configuration.paths));\n\t\t};\n\t}\n\n\tfunction forEach<T>(array: T[], callback: (value: T, index: number, array: T[]) => void): void {\n\t\tarray && array.forEach(callback);\n\t}\n\n\tfunction mix<T extends {}>(target: {}, source: {}, deep?: boolean): T {\n\t\tif (source) {\n\t\t\tfor (let key in source) {\n\t\t\t\tlet sourceValue = (<DojoLoader.ObjectMap> source)[key];\n\n\t\t\t\tif (deep && typeof sourceValue === 'object' &&\n\t\t\t\t\t!Array.isArray(sourceValue) && !(sourceValue instanceof RegExp)) {\n\n\t\t\t\t\tif (!(<DojoLoader.ObjectMap> target)[key]) {\n\t\t\t\t\t\t(<DojoLoader.ObjectMap> target)[key] = {};\n\t\t\t\t\t}\n\t\t\t\t\tmix((<DojoLoader.ObjectMap> target)[key], sourceValue, true);\n\t\t\t\t} else {\n\t\t\t\t\t(<DojoLoader.ObjectMap> target)[key] = sourceValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn <T> target;\n\t}\n\n\tfunction consumePendingCacheInsert(referenceModule?: DojoLoader.Module): void {\n\t\tlet item: any;\n\n\t\tfor (let key in pendingCacheInsert) {\n\t\t\titem = pendingCacheInsert[key];\n\n\t\t\tcache[\n\t\t\t\ttypeof item === 'string' ? toUrl(key, referenceModule) : getModuleInformation(key, referenceModule).mid\n\t\t\t] = item;\n\t\t}\n\n\t\tpendingCacheInsert = {};\n\t}\n\n\tfunction noop(): void {};\n\n\tlet loadNodeModule: (moduleId: string, parent?: DojoLoader.Module) => any = noop;\n\n\tfunction contextRequire(moduleId: string, unused?: void, referenceModule?: DojoLoader.Module): DojoLoader.Module;\n\tfunction contextRequire(dependencies: string[], callback: DojoLoader.RequireCallback, referenceModule?: DojoLoader.Module): DojoLoader.Module;\n\tfunction contextRequire(dependencies: string | string[], callback: any, referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\tlet module: DojoLoader.Module;\n\t\tif (typeof dependencies === 'string') {\n\t\t\tmodule = getModule(dependencies, referenceModule);\n\t\t\tif (module.executed !== true && module.executed !== EXECUTING) {\n\t\t\t\tif (has('host-node') && !module.plugin) {\n\t\t\t\t\tlet result = loadNodeModule(module.mid, referenceModule);\n\t\t\t\t\tif (result) {\n\t\t\t\t\t\tinitializeModule(module, [], null);\n\t\t\t\t\t\tmodule.result = result;\n\t\t\t\t\t\tmodule.cjs.setExports(result);\n\t\t\t\t\t\tmodule.executed = true;\n\t\t\t\t\t\tmodule.injected = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Attempt to require unloaded module ' + module.mid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (module.plugin) {\n\t\t\t\t\tinjectModule(module, null);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Assign the result of the module to `module`\n\t\t\t// otherwise require('moduleId') returns the internal\n\t\t\t// module representation\n\t\t\tmodule = module.result;\n\t\t}\n\t\telse if (Array.isArray(dependencies)) {\n\t\t\t// signature is (requestList [,callback])\n\t\t\t// construct a synthetic module to control execution of the requestList, and, optionally, callback\n\t\t\tmodule = getModuleInformation('*' + (++uidGenerator));\n\t\t\tmix(module, {\n\t\t\t\tdeps: resolveDependencies(dependencies, module, referenceModule),\n\t\t\t\tdef: callback || {},\n\t\t\t\tgc: true // garbage collect\n\t\t\t});\n\t\t\tguardCheckComplete(function (): void {\n\t\t\t\tforEach(module.deps, injectModule.bind(null, module));\n\t\t\t});\n\t\t\texecutionQueue.push(module);\n\t\t\tcheckComplete();\n\t\t}\n\t\treturn module;\n\t}\n\n\tfunction createRequire(module: DojoLoader.Module): DojoLoader.Require {\n\t\tlet result: DojoLoader.Require = (!module && requireModule) || module.require;\n\t\tif (!result) {\n\t\t\tmodule.require = result = <DojoLoader.Require> function (dependencies: any, callback: any): DojoLoader.Module {\n\t\t\t\treturn contextRequire(dependencies, callback, module);\n\t\t\t};\n\t\t\tmix(mix(result, requireModule), {\n\t\t\t\ttoUrl: function (name: string): string {\n\t\t\t\t\treturn toUrl(name, module);\n\t\t\t\t},\n\t\t\t\ttoAbsMid: function (mid: string): string {\n\t\t\t\t\treturn toAbsMid(mid, module);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction runMapProgram(targetModuleId: string, map: DojoLoader.MapItem[]): DojoLoader.MapSource {\n\t\t// search for targetModuleId in map; return the map item if found; falsy otherwise\n\t\tif (map) {\n\t\t\tfor (let i = 0, j = map.length; i < j; ++i) {\n\t\t\t\tif (map[i][2].test(targetModuleId)) {\n\t\t\t\t\treturn map[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction compactPath(path: string): string {\n\t\tconst pathSegments: string[] = path.replace(/\\\\/g, '/').split('/');\n\t\tlet absolutePathSegments: string[] = [];\n\t\tlet segment: string;\n\t\tlet lastSegment: string;\n\n\t\twhile (pathSegments.length) {\n\t\t\tsegment = pathSegments.shift();\n\t\t\tif (segment === '..' && absolutePathSegments.length && lastSegment !== '..') {\n\t\t\t\tabsolutePathSegments.pop();\n\t\t\t\tlastSegment = absolutePathSegments[absolutePathSegments.length - 1];\n\t\t\t}\n\t\t\telse if (segment !== '.') {\n\t\t\t\tabsolutePathSegments.push((lastSegment = segment));\n\t\t\t} // else ignore \".\"\n\t\t}\n\n\t\treturn absolutePathSegments.join('/');\n\t}\n\n\tfunction updateModuleIdFromMap(moduleId: string, referenceModule?: DojoLoader.Module): string {\n\t\t// relative module ids are relative to the referenceModule; get rid of any dots\n\t\tmoduleId = compactPath(/^\\./.test(moduleId) && referenceModule ?\n\t\t\t(referenceModule.mid + '/../' + moduleId) : moduleId);\n\t\t// at this point, moduleId is an absolute moduleId\n\n\t\t// if there is a reference module, then use its module map, if one exists; otherwise, use the global map.\n\t\t// see computeMapProg for more information on the structure of the map arrays\n\t\tlet moduleMap: DojoLoader.MapItem = referenceModule && runMapProgram(referenceModule.mid, mapPrograms);\n\t\tmoduleMap = moduleMap ? moduleMap[1] : mapPrograms.star;\n\n\t\tlet mapItem: DojoLoader.MapItem;\n\t\tif ((mapItem = runMapProgram(moduleId, moduleMap))) {\n\t\t\tmoduleId = mapItem[1] + moduleId.slice(mapItem[3]);\n\t\t}\n\n\t\treturn moduleId;\n\t}\n\n\tfunction getPluginInformation(moduleId: string, match: string[], referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\tconst plugin = getModule(match[1], referenceModule);\n\t\tconst isPluginLoaded = Boolean(plugin.load);\n\n\t\tconst contextRequire = createRequire(referenceModule);\n\n\t\tlet pluginResourceId: string;\n\t\tif (isPluginLoaded) {\n\t\t\tpluginResourceId = resolvePluginResourceId(plugin, match[2], contextRequire);\n\t\t\tmoduleId = (plugin.mid + '!' + pluginResourceId);\n\t\t}\n\t\telse {\n\t\t\t// if not loaded, need to mark in a way that it will get properly resolved later\n\t\t\tpluginResourceId = match[2];\n\t\t\tmoduleId = plugin.mid + '!' + (++uidGenerator) + '!*';\n\t\t}\n\t\treturn <DojoLoader.Module> <any> {\n\t\t\tplugin: plugin,\n\t\t\tmid: moduleId,\n\t\t\treq: contextRequire,\n\t\t\tprid: pluginResourceId,\n\t\t\tfix: !isPluginLoaded\n\t\t};\n\t}\n\n\tfunction getModuleInformation(moduleId: string, referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\tlet match = moduleId.match(/^([^\\/]+)(\\/(.+))?$/);\n\t\tlet packageId = match ? match[1] : '';\n\t\tlet pack = config.pkgs[packageId];\n\t\tlet moduleIdInPackage: string;\n\n\t\tif (pack) {\n\t\t\tmoduleId = packageId + '/' + (moduleIdInPackage = (match[3] || pack.main || 'main'));\n\t\t}\n\t\telse {\n\t\t\tpackageId = '';\n\t\t}\n\n\t\tlet module = modules[moduleId];\n\t\tif (!(module)) {\n\t\t\tlet mapItem = runMapProgram(moduleId, pathMapPrograms);\n\t\t\tlet url = mapItem ? mapItem[1] + moduleId.slice(mapItem[3]) : (packageId ? pack.location + moduleIdInPackage : moduleId);\n\t\t\tmodule = <DojoLoader.Module> <any> {\n\t\t\t\tpid: packageId,\n\t\t\t\tmid: moduleId,\n\t\t\t\tpack: pack,\n\t\t\t\turl: compactPath(\n\t\t\t\t\t// absolute urls should not be prefixed with baseUrl\n\t\t\t\t\t(/^(?:\\/|\\w+:)/.test(url) ? '' : config.baseUrl) +\n\t\t\t\t\turl +\n\t\t\t\t\t// urls with a javascript extension should not have another one added\n\t\t\t\t\t(/\\.js(?:\\?[^?]*)?$/.test(url) ? '' : '.js')\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\treturn module;\n\t}\n\n\tfunction resolvePluginResourceId(plugin: DojoLoader.Module, pluginResourceId: string, contextRequire: DojoLoader.Require): string {\n\t\treturn plugin.normalize ? plugin.normalize(pluginResourceId, contextRequire.toAbsMid) :\n\t\t\tcontextRequire.toAbsMid(pluginResourceId);\n\t}\n\n\tfunction getModule(moduleId: string, referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\t// compute and construct (if necessary) the module implied by the moduleId with respect to referenceModule\n\t\tlet module: DojoLoader.Module;\n\t\tconst pluginRegEx = /^(.+?)\\!(.*)$/;\n\n\t\t// Foreseable situations (where ?-> is a map lookup function)\n\t\t// module\n\t\t// plugin!arg\n\t\t// module ?-> mappedModule\n\t\t// module ?-> mappedPlugin!arg\n\t\t// plugin!arg ?-> mappedPlugin + ! + arg\n\n\t\t// Do inital check on the passed in moduleId\n\t\tconst passedModuleMatch = moduleId.match(pluginRegEx);\n\t\tif (passedModuleMatch) {\n\t\t\t// Passed in moduleId is a plugin, so check the map using only the plugin name\n\t\t\t// then reconstruct using the pluginArgs\n\t\t\tlet pluginId: string = updateModuleIdFromMap(passedModuleMatch[1], referenceModule);\n\t\t\tmoduleId = `${pluginId}!${passedModuleMatch[2]}`;\n\t\t}\n\t\telse {\n\t\t\t// Not a module, so check the map using the full moduleId passed\n\t\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\t}\n\n\t\t// Do final check on the mapped module / plugin Id to see what we're dealing with\n\t\tconst mappedModuleMatch = moduleId.match(pluginRegEx);\n\t\tif (mappedModuleMatch) {\n\t\t\tmodule = getPluginInformation(moduleId, mappedModuleMatch, referenceModule);\n\t\t}\n\t\telse {\n\t\t\tmodule = getModuleInformation(moduleId, referenceModule);\n\t\t}\n\n\t\treturn modules[module.mid] || (modules[module.mid] = module);\n\t}\n\n\tfunction toAbsMid(moduleId: string, referenceModule: DojoLoader.Module): string {\n\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\treturn getModuleInformation(moduleId, referenceModule).mid;\n\t}\n\n\tfunction toUrl(name: string, referenceModule: DojoLoader.Module): string {\n\t\tlet moduleId = name + '/x';\n\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\tconst moduleInfo: DojoLoader.Module = getModuleInformation(moduleId, referenceModule);\n\t\tconst url: string = moduleInfo.url;\n\n\t\t// \"/x.js\" since getModuleInfo automatically appends \".js\" and we appended \"/x\" to make name look like a\n\t\t// module id\n\t\treturn url.slice(0, url.length - 5);\n\t}\n\n\tfunction makeCommonJs(mid: string): DojoLoader.Module {\n\t\treturn (modules[mid] = <DojoLoader.Module> <any> {\n\t\t\tmid: mid,\n\t\t\tinjected: true,\n\t\t\texecuted: true\n\t\t});\n\t}\n\tconst commonJsRequireModule: DojoLoader.Module = makeCommonJs('require');\n\tconst commonJsExportsModule: DojoLoader.Module = makeCommonJs('exports');\n\tconst commonJsModuleModule: DojoLoader.Module = makeCommonJs('module');\n\tlet circularTrace: string[];\n\n\thas.add('loader-debug-circular-dependencies', true);\n\tif (has('loader-debug-circular-dependencies')) {\n\t\tcircularTrace = [];\n\t}\n\n\tfunction executeModule(module: DojoLoader.Module): any {\n\t\t// run the dependency array, then run the factory for module\n\t\tif (module.executed === EXECUTING) {\n\t\t\t// for circular dependencies, assume the first module encountered was executed OK\n\t\t\t// modules that circularly depend on a module that has not run its factory will get\n\t\t\t// the premade cjs.exports===module.result. They can take a reference to this object and/or\n\t\t\t// add properties to it. When the module finally runs its factory, the factory can\n\t\t\t// read/write/replace this object. Notice that so long as the object isn't replaced, any\n\t\t\t// reference taken earlier while walking the dependencies list is still valid.\n\t\t\tif (\n\t\t\t\thas('loader-debug-circular-dependencies') &&\n\t\t\t\tmodule.deps.indexOf(commonJsExportsModule) === -1 &&\n\t\t\t\ttypeof console !== 'undefined'\n\t\t\t) {\n\t\t\t\tconsole.warn('Circular dependency: ' + circularTrace.concat(module.mid).join(' -> '));\n\t\t\t}\n\n\t\t\treturn module.result;\n\t\t}\n\n\t\tif (!module.executed) {\n\t\t\t// TODO: This seems like an incorrect condition inference. Originally it was simply !module.def\n\t\t\t// which caused modules with falsy defined values to never execute.\n\t\t\tif (!module.def && !module.deps) {\n\t\t\t\treturn ABORT_EXECUTION;\n\t\t\t}\n\n\t\t\thas('loader-debug-circular-dependencies') && circularTrace.push(module.mid);\n\n\t\t\tconst dependencies: DojoLoader.Module[] = module.deps;\n\t\t\tlet result: any;\n\n\t\t\tmodule.executed = EXECUTING;\n\t\t\tlet executedDependencies = dependencies.map(function (dependency: DojoLoader.Module): any {\n\t\t\t\tif (result !== ABORT_EXECUTION) {\n\t\t\t\t\t// check for keyword dependencies: DojoLoader.require, exports, module; then execute module dependency\n\t\t\t\t\tresult = ((dependency === commonJsRequireModule) ? createRequire(module) :\n\t\t\t\t\t\t\t\t((dependency === commonJsExportsModule) ? module.cjs.exports :\n\t\t\t\t\t\t\t\t\t((dependency === commonJsModuleModule) ? module.cjs :\n\t\t\t\t\t\t\t\t\t\texecuteModule(dependency))));\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\n\t\t\tif (result === ABORT_EXECUTION) {\n\t\t\t\tmodule.executed = false;\n\t\t\t\thas('loader-debug-circular-dependencies') && circularTrace.pop();\n\t\t\t\treturn ABORT_EXECUTION;\n\t\t\t}\n\n\t\t\tconst factory: DojoLoader.Factory = module.def;\n\t\t\tresult = typeof factory === 'function' ? factory.apply(null, executedDependencies) : factory;\n\n\t\t\t// TODO: But of course, module.cjs always exists.\n\t\t\t// Assign the new module.result to result so plugins can use exports\n\t\t\t// to define their interface; the plugin checks below use result\n\t\t\tresult = module.result = result === undefined && module.cjs ? module.cjs.exports : result;\n\t\t\tmodule.executed = true;\n\t\t\texecutedSomething = true;\n\n\t\t\t// delete references to synthetic modules\n\t\t\tif (module.gc) {\n\t\t\t\tmodules[module.mid] = undefined;\n\t\t\t}\n\n\t\t\t// if result defines load, just assume it's a plugin; harmless if the assumption is wrong\n\t\t\tresult && result.load && [ 'normalize', 'load' ].forEach(function (key: string): void {\n\t\t\t\t(<any> module)[key] = (<any> result)[key];\n\t\t\t});\n\n\t\t\t// for plugins, resolve the loadQ\n\t\t\tforEach(module.loadQ, function (pseudoPluginResource: DojoLoader.Module): void {\n\t\t\t\t// manufacture and insert the real module in modules\n\t\t\t\tconst pluginResourceId: string = resolvePluginResourceId(module, pseudoPluginResource.prid,\n\t\t\t\t\tpseudoPluginResource.req);\n\t\t\t\tconst moduleId: string = (module.mid + '!' + pluginResourceId);\n\t\t\t\tconst pluginResource: DojoLoader.Module =\n\t\t\t\t\t<DojoLoader.Module> mix(mix({}, pseudoPluginResource), { mid: moduleId, prid: pluginResourceId });\n\n\t\t\t\tif (!modules[moduleId]) {\n\t\t\t\t\t// create a new (the real) plugin resource and inject it normally now that the plugin is on board\n\t\t\t\t\tinjectPlugin((modules[moduleId] = pluginResource));\n\t\t\t\t} // else this was a duplicate request for the same (plugin, rid)\n\n\t\t\t\t// pluginResource is really just a placeholder with the wrong moduleId (because we couldn't calculate it\n\t\t\t\t// until the plugin was on board) fix() replaces the pseudo module in a resolved dependencies array with the\n\t\t\t\t// real module lastly, mark the pseudo module as arrived and delete it from modules\n\t\t\t\tpseudoPluginResource.fix(modules[moduleId]);\n\t\t\t\t--waitingCount;\n\t\t\t\tmodules[pseudoPluginResource.mid] = undefined;\n\t\t\t});\n\t\t\tmodule.loadQ = undefined;\n\n\t\t\thas('loader-debug-circular-dependencies') && circularTrace.pop();\n\t\t}\n\n\t\t// at this point the module is guaranteed fully executed\n\t\treturn module.result;\n\t}\n\n\t// TODO: Figure out what proc actually is\n\tfunction guardCheckComplete(callback: Function): void {\n\t\t++checkCompleteGuard;\n\t\tcallback();\n\t\t--checkCompleteGuard;\n\t}\n\n\tfunction checkComplete(): void {\n\t\t// keep going through the executionQueue as long as at least one factory is executed\n\t\t// plugins, recursion, cached modules all make for many execution path possibilities\n\t\t!checkCompleteGuard && guardCheckComplete(function (): void {\n\t\t\tfor (let module: DojoLoader.Module, i = 0; i < executionQueue.length; ) {\n\t\t\t\tmodule = executionQueue[i];\n\t\t\t\tif (module.executed === true) {\n\t\t\t\t\texecutionQueue.splice(i, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texecutedSomething = false;\n\t\t\t\t\texecuteModule(module);\n\t\t\t\t\tif (executedSomething) {\n\t\t\t\t\t\t// something was executed; this indicates the executionQueue was modified, maybe a\n\t\t\t\t\t\t// lot (for example a later module causes an earlier module to execute)\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// nothing happened; check the next module in the exec queue\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction injectPlugin(module: DojoLoader.Module): void {\n\t\t// injects the plugin module given by module; may have to inject the plugin itself\n\t\tconst plugin: DojoLoader.Module = module.plugin;\n\t\tconst onLoad = function (def: any): void {\n\t\t\t\tmodule.result = def;\n\t\t\t\t--waitingCount;\n\t\t\t\tmodule.executed = true;\n\t\t\t\tcheckComplete();\n\t\t\t};\n\n\t\tif (plugin.load) {\n\t\t\tplugin.load(module.prid, module.req, onLoad, config);\n\t\t}\n\t\telse if (plugin.loadQ) {\n\t\t\tplugin.loadQ.push(module);\n\t\t}\n\t\telse {\n\t\t\t// the unshift instead of push is important: we don't want plugins to execute as\n\t\t\t// dependencies of some other module because this may cause circles when the plugin\n\t\t\t// loadQ is run; also, generally, we want plugins to run early since they may load\n\t\t\t// several other modules and therefore can potentially unblock many modules\n\t\t\tplugin.loadQ = [ module ];\n\t\t\texecutionQueue.unshift(plugin);\n\t\t\tinjectModule(module, plugin);\n\t\t}\n\t}\n\n\tfunction injectModule(parent: DojoLoader.Module, module: DojoLoader.Module): void {\n\t\t// TODO: This is for debugging, we should bracket it\n\t\tif (!module) {\n\t\t\tmodule = parent;\n\t\t\tparent = null;\n\t\t}\n\n\t\tif (module.plugin) {\n\t\t\tinjectPlugin(module);\n\t\t}\n\t\telse if (!module.injected) {\n\t\t\tlet cached: DojoLoader.Factory;\n\t\t\tconst onLoadCallback = function (node?: HTMLScriptElement): void {\n\t\t\t\t// DojoLoader.moduleDefinitionArguments is an array of [dependencies, factory]\n\t\t\t\tconsumePendingCacheInsert(module);\n\n\t\t\t\tif (has('loader-ie9-compat') && node) {\n\t\t\t\t\tmoduleDefinitionArguments = (<any> node).defArgs;\n\t\t\t\t}\n\n\t\t\t\t// non-amd module\n\t\t\t\tif (!moduleDefinitionArguments) {\n\t\t\t\t\tmoduleDefinitionArguments = [ [], undefined ];\n\t\t\t\t}\n\n\t\t\t\tdefineModule(module, moduleDefinitionArguments[0], moduleDefinitionArguments[1]);\n\t\t\t\tmoduleDefinitionArguments = null;\n\n\t\t\t\tguardCheckComplete(function (): void {\n\t\t\t\t\tforEach(module.deps, injectModule.bind(null, module));\n\t\t\t\t});\n\t\t\t\tcheckComplete();\n\t\t\t};\n\n\t\t\t++waitingCount;\n\t\t\tmodule.injected = true;\n\t\t\tif ((cached = cache[module.mid])) {\n\t\t\t\ttry {\n\t\t\t\t\tcached();\n\t\t\t\t\tonLoadCallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\t// If a cache load fails, retrieve using injectUrl\n\t\t\t\t\t// TODO: report error, 'cachedThrew', [ error, module ]\n\t\t\t\t}\n\t\t\t}\n\t\t\tinjectUrl(module.url, onLoadCallback, module, parent);\n\t\t}\n\t}\n\n\tfunction resolveDependencies(dependencies: string[], module: DojoLoader.Module, referenceModule: DojoLoader.Module): DojoLoader.Module[] {\n\t\t// resolve dependencies with respect to this module\n\t\treturn dependencies.map(function (dependency: string, i: number): DojoLoader.Module {\n\t\t\tconst result: DojoLoader.Module = getModule(dependency, referenceModule);\n\t\t\tif (result.fix) {\n\t\t\t\tresult.fix = function (m: DojoLoader.Module): void {\n\t\t\t\t\tmodule.deps[i] = m;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tfunction defineModule(module: DojoLoader.Module, dependencies: string[], factory: DojoLoader.Factory): DojoLoader.Module {\n\t\t--waitingCount;\n\t\treturn initializeModule(module, dependencies, factory);\n\t}\n\n\tfunction initializeModule(module: DojoLoader.Module, dependencies: string[], factory: DojoLoader.Factory): DojoLoader.Module {\n\t\treturn <DojoLoader.Module> mix(module, {\n\t\t\tdef: factory,\n\t\t\tdeps: resolveDependencies(dependencies, module, module),\n\t\t\tcjs: {\n\t\t\t\tid: module.mid,\n\t\t\t\turi: module.url,\n\t\t\t\texports: (module.result = {}),\n\t\t\t\tsetExports: function (exports: any): void {\n\t\t\t\t\tmodule.cjs.exports = exports;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\thas.add('function-bind', Boolean(Function.prototype.bind));\n\tif (!has('function-bind')) {\n\t\tinjectModule.bind = function (thisArg: any): typeof injectModule {\n\t\t\tconst slice = Array.prototype.slice;\n\t\t\tconst args: any[] = slice.call(arguments, 1);\n\n\t\t\treturn function (): void {\n\t\t\t\treturn injectModule.apply(thisArg, args.concat(slice.call(arguments, 0)));\n\t\t\t};\n\t\t};\n\t}\n\n\tlet globalObjectGlobals = function (require: DojoLoader.Require, define: DojoLoader.Define): void {\n\t\tglobalObject.require = require;\n\t\tglobalObject.define = define;\n\t};\n\n\tif (has('host-node')) {\n\t\tloadNodeModule = (moduleId: string, parent?: DojoLoader.Module): any => {\n\t\t\tlet module: any = require('module');\n\t\t\tlet result: any;\n\n\t\t\tif (module._findPath && module._nodeModulePaths) {\n\t\t\t\tlet localModulePath = module._findPath(moduleId, module._nodeModulePaths(toUrl('.', parent)));\n\n\t\t\t\tif (localModulePath !== false) {\n\t\t\t\t\tmoduleId = localModulePath;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Some modules attempt to detect an AMD loader by looking for global AMD `define`. This causes issues\n\t\t\t// when other CommonJS modules attempt to load them via the standard Node.js `require`, so hide it\n\t\t\t// during the load\n\t\t\tglobalObject.define = undefined;\n\n\t\t\ttry {\n\t\t\t\tresult = requireModule.nodeRequire(moduleId);\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\t// If the Node.js 'require' function cannot locate a module it will throw \"Error: Cannot find module\"\n\t\t\t\t// Leave it to the caller of this function to handle a non-existent module\n\t\t\t\t// (and throw an error if desired)\n\t\t\t\tresult = undefined;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tglobalObject.define = define;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst vm: any = require('vm');\n\t\tconst fs: any = require('fs');\n\n\t\t// retain the ability to get node's require\n\t\trequireModule.nodeRequire = require;\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void,\n\t\t\t\t\t\t\tmodule: DojoLoader.Module, parent?: DojoLoader.Module): void {\n\t\t\tfs.readFile(url, 'utf8', function (error: Error, data: string): void {\n\t\t\t\tfunction loadCallback () {\n\t\t\t\t\tlet result = loadNodeModule(module.mid, parent);\n\n\t\t\t\t\t\tif (!result) {\n\t\t\t\t\t\t\treportModuleLoadError(parent, module, url);\n\t\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\tmoduleDefinitionArguments = [ [], loadCallback ];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// global `module` variable needs to be shadowed for UMD modules that are loaded in an Electron\n\t\t\t\t\t// webview; in Node.js the `module` variable does not exist when using `vm.runInThisContext`,\n\t\t\t\t\t// but in Electron it exists in the webview when Node.js integration is enabled which causes loaded\n\t\t\t\t\t// modules to register with Node.js and break the loader\n\t\t\t\t\tlet oldModule = globalObject.module;\n\t\t\t\t\tglobalObject.module = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Using an `object` as a second argument causes Instabul\n\t\t\t\t\t\t * issues and then thinks the file should not be instrumented\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * See: dojo/loader#57\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvm.runInThisContext(data, url);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tglobalObject.module = oldModule;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t\t};\n\n\t\tsetGlobals = function (require: DojoLoader.RootRequire, define: DojoLoader.Define): void {\n\t\t\tmodule.exports = globalObject.require = require;\n\t\t\tglobalObject.define = define;\n\t\t};\n\t}\n\telse if (has('host-browser')) {\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module,\n\t\t\t\t\t\t\tparent?: DojoLoader.Module): void {\n\t\t\t// insert a script element to the insert-point element with src=url;\n\t\t\t// apply callback upon detecting the script has loaded.\n\t\t\tconst node: HTMLScriptElement = document.createElement('script');\n\t\t\tconst handler: EventListener = function (event: Event): void {\n\t\t\t\tdocument.head.removeChild(node);\n\n\t\t\t\tif (event.type === 'load') {\n\t\t\t\t\thas('loader-ie9-compat') ? callback(node) : callback();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treportModuleLoadError(parent, module, url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnode.addEventListener('load', handler, false);\n\t\t\tnode.addEventListener('error', handler, false);\n\n\t\t\t(<any> node).crossOrigin = 'anonymous';\n\t\t\tnode.charset = 'utf-8';\n\t\t\tnode.src = url;\n\t\t\tdocument.head.appendChild(node);\n\t\t};\n\n\t\tsetGlobals = globalObjectGlobals;\n\t}\n\telse if (has('host-nashorn')) {\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module,\n\t\t\tparent?: DojoLoader.Module): void {\n\n\t\t\tload(url);\n\t\t\tcallback();\n\t\t};\n\n\t\tsetGlobals = globalObjectGlobals;\n\t}\n\telse {\n\t\tthrow new Error('Unsupported platform');\n\t}\n\n\thas.add('loader-debug-internals', true);\n\tif (has('loader-debug-internals')) {\n\t\trequireModule.inspect = function (name: string): any {\n\t\t\t/* tslint:disable:no-eval */\n\t\t\t// TODO: Should this use console.log so people do not get any bright ideas about using this in apps?\n\t\t\treturn eval(name);\n\t\t\t/* tslint:enable:no-eval */\n\t\t};\n\t}\n\n\thas.add('loader-undef', true);\n\tif (has('loader-undef')) {\n\t\trequireModule.undef = function (id: string): void {\n\t\t\tif (modules[id]) {\n\t\t\t\tmodules[id] = undefined;\n\t\t\t}\n\t\t};\n\t}\n\n\tmix(requireModule, {\n\t\ttoAbsMid: toAbsMid,\n\t\ttoUrl: toUrl,\n\n\t\tcache: function (cache: DojoLoader.ObjectMap): void {\n\t\t\tconsumePendingCacheInsert();\n\t\t\tpendingCacheInsert = cache;\n\t\t}\n\t});\n\n\tObject.defineProperty(requireModule, 'baseUrl', {\n\t\tget: function (): string {\n\t\t\treturn config.baseUrl;\n\t\t},\n\t\tenumerable: true\n\t});\n\n\thas.add('loader-cjs-wrapping', true);\n\n\tlet comments: RegExp;\n\tlet requireCall: RegExp;\n\n\tif (has('loader-cjs-wrapping')) {\n\t\tcomments = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/mg;\n\t\trequireCall = /require\\s*\\(\\s*([\"'])(.*?[^\\\\])\\1\\s*\\)/g;\n\t}\n\n\thas.add('loader-explicit-mid', true);\n\n\t/**\n\t * @param deps //(array of commonjs.moduleId, optional)\n\t * @param factory //(any)\n\t */\n\tlet define: DojoLoader.Define = <DojoLoader.Define> mix(function (dependencies: string[], factory: DojoLoader.Factory): void {\n\t\tlet originalFactory: any;\n\t\tif (has('loader-explicit-mid') && arguments.length > 1 && typeof dependencies === 'string') {\n\t\t\tlet id: string = <any> dependencies;\n\t\t\tif (arguments.length === 3) {\n\t\t\t\tdependencies = <any> factory;\n\t\t\t\tfactory = arguments[2];\n\t\t\t} else {\n\t\t\t\tdependencies = [];\n\t\t\t}\n\n\t\t\t// Some modules in the wild have an explicit module ID that is null; ignore the module ID in this case and\n\t\t\t// register normally using the request module ID\n\t\t\tif (id != null) {\n\t\t\t\tlet module: DojoLoader.Module = getModule(id);\n\t\t\t\tif (factory) {\n\t\t\t\t\toriginalFactory = factory;\n\t\t\t\t\tfactory = function () {\n\t\t\t\t\t\tmodule.executed = true;\n\t\t\t\t\t\treturn (module.result = originalFactory.apply ?\n\t\t\t\t\t\t\toriginalFactory.apply(null, arguments) : originalFactory);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tmodule.injected = true;\n\t\t\t\tdefineModule(module, dependencies, factory);\n\t\t\t\tguardCheckComplete(function (): void {\n\t\t\t\t\tforEach(module.deps, injectModule.bind(null, module));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\tif (has('loader-cjs-wrapping') && typeof dependencies === 'function') {\n\t\t\t\toriginalFactory = <any> dependencies;\n\t\t\t\tdependencies = [ 'require', 'exports', 'module' ];\n\n\t\t\t\t// Scan factory for require() calls and add them to the\n\t\t\t\t// list of dependencies\n\t\t\t\toriginalFactory.toString()\n\t\t\t\t\t.replace(comments, '')\n\t\t\t\t\t.replace(requireCall, function (): string {\n\t\t\t\t\t\tdependencies.push(/* mid */ arguments[2]);\n\t\t\t\t\t\treturn arguments[0];\n\t\t\t\t\t});\n\t\t\t\tfactory = function (require, exports, module): any {\n\t\t\t\t\tconst originalModuleId = module.id;\n\t\t\t\t\tlet result: any = originalFactory.apply(null, arguments);\n\t\t\t\t\tif (originalModuleId !== module.id) {\n\t\t\t\t\t\tconst newModule: DojoLoader.Module = getModule(module.id);\n\t\t\t\t\t\tdefineModule(newModule, dependencies, null);\n\t\t\t\t\t\tnewModule.injected = true;\n\t\t\t\t\t\tnewModule.executed = true;\n\t\t\t\t\t\tnewModule.result = module.exports = result || module.exports;\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (/* define(value) */ !Array.isArray(dependencies)) {\n\t\t\t\tconst value: any = dependencies;\n\t\t\t\tdependencies = [];\n\t\t\t\tfactory = function (): any {\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (has('loader-ie9-compat')) {\n\t\t\tfor (let i = document.scripts.length - 1, script: HTMLScriptElement;\n\t\t\t\tscript = <HTMLScriptElement> document.scripts[i];\n\t\t\t\t--i) {\n\t\t\t\tif ((<any> script).readyState === 'interactive') {\n\t\t\t\t\t(<any> script).defArgs = [ dependencies, factory ];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tmoduleDefinitionArguments = [ dependencies, factory ];\n\t\t}\n\t}, {\n\t\tamd: { vendor: 'dojotoolkit.org' }\n\t});\n\n\tsetGlobals(requireModule, define);\n\tif (has('host-nashorn') && args[0]) {\n\t\tload(args[0]);\n\t}\n})((typeof Packages !== 'undefined' ? Array.prototype.slice.call(arguments, 0) : []));\n"]}